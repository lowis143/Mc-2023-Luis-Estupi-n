# -*- coding: utf-8 -*-
"""Taller #22

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Ly-6EQkr1UsNOcSAMM0lxR9z2FcPo_fY
"""

def lagrange_interp(x, fx, degree, point):

    # Calcular los coeficientes de los polinomios de interpolación de Lagrange.
    coeffs = []
    for j in range(degree + 1):
        term = fx[j]
        for k in range(degree + 1):
            if k != j:
                term *= (point - x[k]) / (x[j] - x[k])
        coeffs.append(term)

    # Sumar los términos del polinomio.
    result = sum(coeffs)

    return result


# Puntos base
x = [0, 1, 2, 3, 4]
fx = [1, 0.2, 2, 4.2, 5]

# Polinomios de interpolación de Lagrange de grado 1, 2 y 3
L1 = lagrange_interp(x, fx, 1, 2.5)
L2 = lagrange_interp(x, fx, 2, 2.5)
L3 = lagrange_interp(x, fx, 3, 2.5)

# Polinomios de grado 1 y 2 asociados a los puntos seleccionados
L1_points = lagrange_interp(x[:2], fx[:2], 1, 2.5)
L2_points = lagrange_interp(x[:3], fx[:3], 2, 2.5)

# Imprimir los resultados
print("Polinomio de interpolación de Lagrange de grado 1: ", L1)
print("Polinomio de interpolación de Lagrange de grado 2: ", L2)
print("Polinomio de interpolación de Lagrange de grado 3: ", L3)
print("Polinomio de grado 1 asociado a los puntos seleccionados: ", L1_points)
print("Polinomio de grado 2 asociado a los puntos seleccionados: ", L2_points)